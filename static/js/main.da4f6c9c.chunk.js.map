{"version":3,"sources":["components/profile/profile.css.jsx","components/profile/profile.jsx","components/profile/index.jsx","components/statistics/statistics.css.jsx","secondaryFunctions/random-color.js","components/statistics/statistics.jsx","components/statistics/index.jsx","components/friendList/friendList.css.jsx","components/friendList/friendList.jsx","components/friendList/index.jsx","components/transactionHistory/transactionHistory.css.jsx","components/transactionHistory/transactionHistory.jsx","secondaryFunctions/firstLetterToUpperCase.js","components/transactionHistory/index.jsx","App.js","index.js"],"names":["secondaryColor","DescriptionEl","styled","div","AvatarEl","img","NameEl","p","TagEl","LocationEl","ProfileEl","StatListEl","ul","StatItemEl","li","LabelEl","span","QuantityEl","UserDescription","name","tag","location","avatar","src","alt","defaultProps","Profile","stats","followers","views","likes","ListItem","props","countElements","red","Math","round","random","green","blue","randColor","Label","Percentage","Section","section","Title","h2","StatList","StatisticalItem","label","percentage","Statistics","title","statItems","map","id","length","undefined","Ul","Li","Status","isOnline","Name","FriendListItem","width","FriendList","listItems","friends","toString","BaseRowStyles","TransactionsTable","table","Tr","tr","Th","th","Td","td","TableRow","word","type","amount","currency","slice","toUpperCase","TransactionHistory","tableRows","items","App","className","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da4f6c9c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst secondaryColor = '#768696';\r\n\r\nconst DescriptionEl = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tflex-direction: column;\r\n\tpadding: 30px 0px;\r\n\r\n\tmin-height: 255px;\r\n\r\n\tbackground-color: #fff;\r\n`;\r\n\r\nconst AvatarEl = styled.img`\r\n\twidth: 100px;\r\n\tborder-radius: 50%;\r\n`;\r\n\r\nconst NameEl = styled.p`\r\n\tmargin: 30px 0 0 0;\r\n\tfont-size: 16px;\r\n\tfont-weight: 700;\r\n`;\r\n\r\nconst TagEl = styled.p`\r\n\tmargin: 10px 0 0 0;\r\n\tcolor: ${secondaryColor};\r\n`;\r\n\r\nconst LocationEl = styled.p`\r\n\tmargin: 10px 0 0 0;\r\n\tcolor: ${secondaryColor};\r\n`;\r\n\r\nconst ProfileEl = styled.div`\r\n\tmargin: 85px 75px;\t\r\n\twidth: 250px;\r\n\tbox-shadow: 1px 1px 3px 1px rgba(0,0,0,0.79);\r\n`;\r\n\r\nconst StatListEl = styled.ul`\r\n\tdisplay: flex;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tjustify-content: space-between;\r\n\r\n\tlist-style: none;\r\n`;\r\n\r\nconst StatItemEl = styled.li`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\r\n\twidth: calc(100% / 3);\r\n\tmin-height: 75px;\r\n\r\n\tborder: 1px solid #e4e9f0;\r\n\tbackground-color: #f3f6f9;\r\n\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst LabelEl = styled.span`\r\n\tcolor: ${secondaryColor};\r\n`;\r\n\r\nconst QuantityEl = styled.span`\r\n\tfont-weight: 700;\r\n`;\r\n\r\nexport { DescriptionEl, AvatarEl, NameEl, TagEl, LocationEl, ProfileEl, StatListEl, StatItemEl, LabelEl, QuantityEl };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { DescriptionEl, AvatarEl, NameEl, TagEl, LocationEl, ProfileEl, StatListEl, StatItemEl, LabelEl, QuantityEl } from './profile.css';\r\n\r\nconst UserDescription = ({ name, tag, location, avatar }) => {\r\n\treturn (\t\t\r\n\t\t<DescriptionEl>\r\n\t\t\t<AvatarEl\r\n\t\t\t\tsrc={avatar}\r\n\t\t\t\talt=\"Аватар пользователя\"\r\n\t\t\t/>\r\n\t\t\t<NameEl>{name}</NameEl>\r\n\t\t\t<TagEl>@{tag}</TagEl>\r\n\t\t\t<LocationEl>{location}</LocationEl>\r\n\t\t</DescriptionEl>\r\n\t)\r\n};\r\n\r\nUserDescription.defaultProps = {\r\n\tavatar: 'https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg',\r\n};\r\n\r\nUserDescription.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\ttag: PropTypes.string,\r\n\tlocation: PropTypes.string,\r\n\tavatar: PropTypes.string,\r\n};\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats}) => {\r\n\treturn (\r\n\t\t<ProfileEl>\r\n\t\t\t<UserDescription\r\n\t\t\t\tname={name}\r\n\t\t\t\ttag={tag}\r\n\t\t\t\tlocation={location}\r\n\t\t\t\tavatar={avatar}\r\n\t\t\t/>\r\n\t\t\t<StatListEl>\r\n\t\t\t\t<StatItemEl>\r\n\t\t\t\t\t<LabelEl>Followers</LabelEl>\r\n\t\t\t\t\t<QuantityEl>{stats.followers}</QuantityEl>\r\n\t\t\t\t</StatItemEl>\r\n\t\t\t\t<StatItemEl>\r\n\t\t\t\t\t<LabelEl>Views</LabelEl>\r\n\t\t\t\t\t<QuantityEl>{stats.views}</QuantityEl>\r\n\t\t\t\t</StatItemEl>\r\n\t\t\t\t<StatItemEl>\r\n\t\t\t\t\t<LabelEl>Likes</LabelEl>\r\n\t\t\t\t\t<QuantityEl>{stats.likes}</QuantityEl>\r\n\t\t\t\t</StatItemEl>\r\n\t\t\t</StatListEl>\r\n\t\t</ProfileEl>\r\n\t);\r\n};\r\n\r\nProfile.defaultProps = {\r\n\tstats: {\r\n\t\tfollowers: 0,\r\n\t\tviews: 0,\r\n\t\tlikes: 0,\r\n\t}\r\n}\r\n\r\nProfile.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\ttag: PropTypes.string,\r\n\tlocation: PropTypes.string,\r\n\tavatar: PropTypes.string,\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//--------------------------------------------------------------------------------\r\n// import styles from './profile.module.css';\r\n// const UserDescription = ({ name, tag, location, avatar }) => {\r\n// \treturn (\t\t\r\n// \t\t<div className={styles.description}>\r\n// \t\t\t<img\r\n// \t\t\t\tsrc={avatar}\r\n// \t\t\t\talt=\"Аватар пользователя\"\r\n// \t\t\t\tclassName={styles.avatar}\r\n// \t\t\t/>\r\n// \t\t\t<p className={styles.name}>{name}</p>\r\n// \t\t\t<p className={styles.tag}>@{tag}</p>\r\n// \t\t\t<p className={styles.location}>{location}</p>\r\n// \t\t</div>\r\n// \t)\r\n// };\r\n\r\n// UserDescription.defaultProps = {\r\n// \tavatar: 'https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg',\r\n// };\r\n\r\n// UserDescription.propTypes = {\r\n// \tname: PropTypes.string.isRequired,\r\n// \ttag: PropTypes.string,\r\n// \tlocation: PropTypes.string,\r\n// \tavatar: PropTypes.string,\r\n// };\r\n\r\n// const Profile = ({ name, tag, location, avatar, stats}) => {\r\n// \treturn (\r\n// \t\t<div className={styles.profile}>\r\n// \t\t\t<UserDescription\r\n// \t\t\t\tname={name}\r\n// \t\t\t\ttag={tag}\r\n// \t\t\t\tlocation={location}\r\n// \t\t\t\tavatar={avatar}\r\n// \t\t\t/>\r\n// \t\t\t<ul className={styles[\"stat-list\"]}>\r\n// \t\t\t\t<li>\r\n// \t\t\t\t\t<span className={styles.label}>Followers</span>\r\n// \t\t\t\t\t<span className={styles.quantity}>{stats.followers}</span>\r\n// \t\t\t\t</li>\r\n// \t\t\t\t<li>\r\n// \t\t\t\t\t<span className={styles.label}>Views</span>\r\n// \t\t\t\t\t<span className={styles.quantity}>{stats.views}</span>\r\n// \t\t\t\t</li>\r\n// \t\t\t\t<li>\r\n// \t\t\t\t\t<span className={styles.label}>Likes</span>\r\n// \t\t\t\t\t<span className={styles.quantity}>{stats.likes}</span>\r\n// \t\t\t\t</li>\r\n// \t\t\t</ul>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// Profile.defaultProps = {\r\n// \tstats: {\r\n// \t\tfollowers: 0,\r\n// \t\tviews: 0,\r\n// \t\tlikes: 0,\r\n// \t}\r\n// }\r\n\r\n// Profile.propTypes = {\r\n// \tstats: {\r\n// \t\tfollowers: PropTypes.number.isRequired,\r\n// \t\tviews: PropTypes.number.isRequired,\r\n// \t\tlikes: PropTypes.number.isRequired,\r\n// \t}\r\n// };\r\n\r\n// export default Profile;","import Profile from './profile';\r\nexport default Profile;","import styled from 'styled-components';\r\nimport randColor from '../../secondaryFunctions/random-color';\r\n\r\n\r\nconst ListItem = styled.li`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmin-height: 60px;\r\n\twidth: calc(100% / ${props => props.countElements});\r\n\tbackground-color: RGB(${() => randColor()});\r\n\tcolor: white;\r\n`;\r\n\r\nconst Label = styled.span`\r\n`;\r\n\r\nconst Percentage = styled.span`\r\n\tmargin-top: 10px;\r\n`;\r\n\r\nconst Section = styled.section`\r\n\twidth: 375px;\r\n\tbox-shadow: 1px 1px 3px 1px rgba(0,0,0,0.79);\r\n`;\r\n\r\nconst Title = styled.h2`\r\n\tmargin: 0;\r\n\tpadding: 30px 0px;\r\n\r\n\twidth: 100%;\r\n\ttext-transform: uppercase;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst StatList = styled.ul`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tlist-style: none;\r\n`;\r\n\r\nexport { ListItem, Label, Percentage, Section, Title, StatList };","export default function randColor() {\r\n\tconst red = Math.round(Math.random() * 255);\r\n\tconst green = Math.round(Math.random() * 255);\r\n\tconst blue = Math.round(Math.random() * 255);\r\n\treturn `${red}, ${green}, ${blue}`;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ListItem, Label, Percentage, Section, Title, StatList } from './statistics.css';\r\n\r\nconst StatisticalItem = ({label, percentage, countElements}) => {\r\n\treturn (\r\n\t\t<ListItem countElements={countElements}>\r\n\t\t\t<Label>{label}</Label>\r\n\t\t\t<Percentage>{percentage}%</Percentage>\r\n    </ListItem>\r\n\t);\r\n};\r\n\r\nStatisticalItem.propTypes = {\r\n\tlabel: PropTypes.string,\r\n\tpercentage: PropTypes.number,\r\n}\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n\tconst statItems = stats.map(({id, label, percentage}) => \r\n\t\t<StatisticalItem\r\n\t\t\tkey={id}\r\n\t\t\tlabel={label}\r\n\t\t\tpercentage={percentage}\r\n\t\t\tcountElements={stats.length}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Section>\r\n\t\t\t{\r\n\t\t\t\ttitle !== undefined &&\r\n\t\t\t\t<Title>{title}</Title>\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\t<StatList>\r\n\t\t\t\t{statItems}\r\n\t\t\t</StatList>\r\n\t\t</Section>\r\n\t);\r\n};\r\n\r\nStatistics.propTypes = {\r\n\ttitle: PropTypes.string,\r\n}\r\n\r\nexport default Statistics\r\n","import Statistics from './statistics';\r\nexport default Statistics;","import styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n\tmargin: 20px 0 0 0;\r\n\tpadding: 10px 15px 0 7px;\r\n\twidth: 420px;\r\n`;\r\n\r\nconst Li = styled.li`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin-bottom: 15px;\r\n\tpadding: 0 15px;\r\n\twidth: 100%;\r\n\tmin-height: 115px;\r\n\tbox-shadow: 1px 1px 3px 1px rgba(0,0,0,0.79);\r\n`;\r\n\r\nconst Status = styled.span`\r\n\tdisplay: block;\r\n\twidth: 25px;\r\n\theight: 25px;\r\n\tborder-radius: 50%;\r\n\tbackground-color: red;\r\n\tbackground-color: ${props => props.isOnline ? 'green' : 'red'};\r\n`;\r\n\r\nconst AvatarEl = styled.img`\r\n\tmargin-left: 17px;\r\n\twidth: 95px;\r\n\theight: 95px;\r\n\tborder-radius: 4px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n\tmargin-left: 17px;\r\n\tfont-size: 2em;\r\n\tfont-weight: 500;\r\n`;\r\n\r\nexport { Ul, Li, Status, AvatarEl, Name };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Ul, Li, Status, AvatarEl, Name } from './friendList.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n\tconst alt = `Аватар ${name}`;\r\n\t\r\n\treturn (\r\n\t\t<Li>\r\n\t\t\t<Status isOnline={isOnline}></Status>\r\n\t\t\t<AvatarEl src={avatar} alt={alt} width=\"48\" />\r\n\t\t\t<Name>{name}</Name>\r\n\t\t</Li>\r\n\t);\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n\tavatar: PropTypes.string,\r\n\tname: PropTypes.string, \r\n\tisOnline: PropTypes.bool,\r\n};\r\n\r\n//-----------------------\r\n\r\nconst FriendList = ({friends}) => {\r\n\tconst listItems = friends.map(({ id, avatar, name, isOnline }) =>\r\n\t\t<FriendListItem\r\n\t\t\tkey={id.toString()}\r\n\t\t\tavatar={avatar}\r\n\t\t\tname={name}\r\n\t\t\tisOnline={isOnline}\r\n\t\t/>\r\n\t)\r\n\treturn (\r\n\t\t<Ul>\r\n\t\t\t{listItems}\r\n\t\t</Ul>\r\n\t);\r\n};\r\n\r\nFriendList.propTypes = {\r\n\tfriends: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tid: PropTypes.number,\r\n\t\tavatar: PropTypes.string,\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\tisOnline: PropTypes.bool,\r\n\t}))\r\n};\r\n\r\nexport default FriendList;","import FriendList from './friendList';\r\n\r\nexport default FriendList;","import styled from 'styled-components';\r\n\r\nconst BaseRowStyles = `\r\n\tpadding: 20px;\r\n\tmin-height: 50px;\r\n\ttext-align: center;\r\n\tfont-size: 1em;\r\n\tcolor: #848b93;\r\n\tborder: 1px solid #848b93;\t\r\n`;\r\n\r\nconst TransactionsTable = styled.table`\r\n\tmargin-top: 20px;\r\n\tborder-radius: 10px;\r\n\tborder: 1px solid red;\r\n\twidth: 960px;\r\n\tborder-collapse: collapse;\r\n\tbox-shadow: 1px 1px 3px 1px rgba(0,0,0,0.79);\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n\t&&:nth-child(even) {\r\n\t\tbackground-color: #ecf1f4;\r\n\t}\r\n`;\r\n\r\nconst Th = styled.th`\r\n\t${BaseRowStyles};\r\n\tbackground-color: #00bcd5;\r\n\tcolor: white;\r\n\tborder: 1px solid white;\r\n\ttext-transform: uppercase;\r\n`;\r\n\r\nconst Td = styled.td`\r\n\t${BaseRowStyles};\t\r\n`;\r\n\r\nexport { TransactionsTable, Tr, Th, Td };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport firstLetterToUpperCase from '../../secondaryFunctions/firstLetterToUpperCase.js';\r\n\r\nimport { TransactionsTable, Tr, Th, Td } from './transactionHistory.css';\r\n\r\nconst TableRow = ({ type, amount, currency }) => {\r\n\treturn (\r\n\t\t<Tr>\r\n\t\t\t<Td>{firstLetterToUpperCase(type)}</Td>\r\n\t\t\t<Td>{amount}</Td>\r\n\t\t\t<Td>{currency}</Td>\r\n\t\t</Tr>\r\n\t);\r\n};\r\n\r\nTableRow.propTypes = {\r\n\ttype: PropTypes.string.isRequired,\r\n\tamount: PropTypes.string.isRequired,\r\n\tcurrency: PropTypes.string.isRequired,\r\n};\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n\tconst tableRows = items.map(({ id, type, amount, currency }) => \r\n\t\t<TableRow\r\n\t\t\tkey={id}\r\n\t\t\ttype={type}\r\n\t\t\tamount={amount}\r\n\t\t\tcurrency={currency}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TransactionsTable>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<Th>Type</Th>\r\n\t\t\t\t\t<Th>Amount</Th>\r\n\t\t\t\t\t<Th>Currency</Th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\r\n\t\t\t<tbody>\r\n\t\t\t\t{tableRows}\r\n\t\t\t</tbody>\r\n\t\t</TransactionsTable>\r\n\t);\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n\titems: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tid: PropTypes.string.isRequired,\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\tamount: PropTypes.string.isRequired,\r\n\t\tcurrency: PropTypes.string.isRequired,\r\n\t}))\r\n};\r\n\r\nexport default TransactionHistory;","export default function firstLetterToUpperCase(word) {\r\n\treturn `${word.slice(0, 1).toUpperCase()}${word.slice(1)}`;\r\n}","import TransactionHistory from './transactionHistory';\r\nexport default TransactionHistory;","import user from './startData/user.json';\nimport statisticalData from './startData/statistical-data.json';\nimport friends from './startData/friends.json';\nimport transactions from './startData/transactions.json';\n\nimport Profile from './components/profile';\nimport Statistics from './components/statistics';\nimport FriendList from './components/friendList';\nimport TransactionHistory from './components/transactionHistory';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}